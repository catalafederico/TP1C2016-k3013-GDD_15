/*CREO NUEVO ESQUEMA */
CREATE SCHEMA [GDD_15] AUTHORIZATION [gd];
GO
/*CREO LAS  19 TABLAS DEL DER.
LOS CAMPOS QUE EMPIEZAN CON N_ID SON IDS
N_ NUMEROS
C_ CODIGOS
D_ DESCRIPCIONES 
D_DESCRED DESCRIPCION 
D_DESCRIP DESCRIPCION CORTA
*/
/*CREO LA TABLA DE USUARIOS */
CREATE TABLE GDD_15.USUARIOS (
	N_ID_USUARIO BIGINT PRIMARY KEY, ----LE SAQUE EL IDENTITY PORQUE SINO NO ME DEJA LLENAR EL CAMPO CON EL TRIGGER
	C_USUARIO_NOMBRE VARCHAR(250) UNIQUE,
	C_PASSWORD VARCHAR(250),
	N_CANT_INTENTOS TINYINT,
	N_PRIMERA_PUBLICACION TINYINT DEFAULT 1,
	F_ALTA DATETIME,
	F_BAJA DATETIME
);
GO
/*CREO LA TABLA DE DIRECCIONES */
CREATE TABLE GDD_15.DIRECCIONES (
	N_ID_DIRECCION BIGINT IDENTITY(1,1) PRIMARY KEY,
	C_CALLE VARCHAR(100),
	N_NUMERO SMALLINT,
	C_PISO VARCHAR(50),
	C_DEPTO VARCHAR(50),
	C_POSTAL VARCHAR(50)
);
GO
/*CREO LA TABLA DE ROLES */
CREATE TABLE GDD_15.ROLES (
	N_ID_ROL BIGINT IDENTITY(1,1) PRIMARY KEY,
	C_ROL VARCHAR(100),
	--N_HABILITADO TINYINT DEFAULT 1, 
	F_ALTA DATETIME,
	F_BAJA DATETIME
);
GO
/*CREO LA TABLA DE ROLES POR USUARIO */
CREATE TABLE GDD_15.ROLES_USUARIOS (
	N_ID_USUARIO BIGINT NOT NULL,
	N_ID_ROL BIGINT NOT NULL,
	--N_HABILITADO TINYINT DEFAULT 1,
	F_ALTA DATETIME,
	F_BAJA DATETIME
);
GO
/*CREO LA TABLA DE FUNCIONALIDADES */
CREATE TABLE GDD_15.FUNCIONALIDADES (
	N_ID_FUNCIONALIDAD BIGINT IDENTITY(1,1) PRIMARY KEY,
	D_DESCRED VARCHAR(100),
);
GO
/*CREO LA TABLA DE FUNCIONALIDADES POR ROLES */
CREATE TABLE GDD_15.FUNCIONALIDADES_ROLES (
	N_ID_ROL BIGINT NOT NULL,
	N_ID_FUNCIONALIDAD BIGINT NOT NULL,
	F_ALTA DATETIME,
	F_BAJA DATETIME
);
GO
/*CREO LA TABLA DE RUBROS */
CREATE TABLE GDD_15.RUBROS (
	N_ID_RUBRO BIGINT IDENTITY(1,1) PRIMARY KEY ,
	D_DESCRIP VARCHAR(50),
	D_DESCRED VARCHAR(250)
);
GO
/*CREO LA TABLA DE EMPRESAS */
CREATE TABLE GDD_15.EMPRESAS (
	N_ID_USUARIO BIGINT IDENTITY(1,1) PRIMARY KEY ,
	N_ID_RUBRO BIGINT,
	N_ID_DIRECCION BIGINT,
	C_RAZON_SOCIAL VARCHAR(100),
	C_CIUDAD VARCHAR(100),
	N_CUIT TINYINT,
	D_NOMBRE_CONTACTO VARCHAR(100),
	N_TELEFONO TINYINT,
	C_CORREO VARCHAR(50),
	F_CREACION DATETIME
);
GO
/*CREO LA TABLA DE CLIENTES */
CREATE TABLE GDD_15.CLIENTES (
	N_ID_USUARIO BIGINT IDENTITY(1,1) PRIMARY KEY,
	N_ID_DIRECCION BIGINT,
	C_TIPO_DOCUMENTO  VARCHAR(100),
	N_DOCUMENTO VARCHAR(100) NOT NULL,
	D_APELLIDOS VARCHAR(100),
	D_NOMBRES VARCHAR(100),
	F_NACIMIENTO DATETIME,
	C_CORREO VARCHAR(50),
	N_TELEFONO TINYINT
);
GO
/*CREO LA TABLA DE PUBLICACIONES */
CREATE TABLE GDD_15.PUBLICACIONES (
	N_ID_PUBLICACION BIGINT IDENTITY(1,1) PRIMARY KEY ,
	C_VISIBILIDAD BIGINT,
	N_ID_USUARIO BIGINT,
	N_ID_RUBRO BIGINT,
	N_ID_ESTADO BIGINT,
	N_ID_TIPO BIGINT,
	D_DESCRED VARCHAR(100),
	N_STOCK INT,
	F_INICIO DATETIME,
	F_VENCIMIENTO DATETIME,
	N_PRECIO FLOAT(24),
	C_PERMITE_ENVIO VARCHAR(2)
);
GO
/*CREO LA TABLA DE ESTADOS */
CREATE TABLE GDD_15.ESTADOS (
	N_ID_ESTADO BIGINT IDENTITY(1,1) PRIMARY KEY,
	C_ESTADO VARCHAR(50),
);
GO
/*CREO LA TABLA DE TIPOS */
CREATE TABLE GDD_15.TIPOS (
	N_ID_TIPO BIGINT IDENTITY(1,1) PRIMARY KEY,
	C_TIPO VARCHAR(50),
);
GO
/*CREO LA TABLA DE FACTURAS */
CREATE TABLE GDD_15.FACTURAS (
	N_ID_FACTURA BIGINT IDENTITY(1,1) PRIMARY KEY ,
	C_TIPO_PAGO VARCHAR(50),
	F_ALTA DATETIME
);
GO
/*CREO LA TABLA DE LOS ITEMS DE LAS FACTURAS */
CREATE TABLE GDD_15.FACTURAS_ITEMS (
	N_ID_ITEM BIGINT IDENTITY(1,1) PRIMARY KEY,
	N_ID_FACTURA BIGINT NOT NULL,
	N_ID_PUBLICACION BIGINT NOT NULL,
	N_MONTO FLOAT(24),
	N_CANTIDAD INT
);
GO
/*CREO LA TABLA DE VISIBILIDADES */
CREATE TABLE GDD_15.VISIBILIDADES (
	C_VISIBILIDAD BIGINT PRIMARY KEY ,
	D_DESCRIP VARCHAR(50),
	N_PRECIO FLOAT(24),
	N_COMISION  FLOAT(24)
);
GO
/*CREO LA TABLA DE OFERTAS */
CREATE TABLE GDD_15.OFERTAS (
	N_ID_OFERTA BIGINT IDENTITY(1,1) PRIMARY KEY ,
	N_ID_PUBLICACION BIGINT,
	N_ID_CLIENTE BIGINT,
	N_MONTO FLOAT(24),
	C_GANADOR  TINYINT,
	F_ALTA DATETIME,
	N_ENVIO TINYINT
);
GO
/*CREO LA TABLA DE COMPRAS */
CREATE TABLE GDD_15.COMPRAS (
	N_ID_COMPRA BIGINT IDENTITY(1,1) PRIMARY KEY ,
	N_ID_PUBLICACION BIGINT,
	N_ID_CLIENTE BIGINT,
	N_CANTIDAD INT,
	F_ALTA DATETIME,
	N_ENVIO TINYINT
);
GO
/*CREO LA TABLA DE CALIFICACIONES */
CREATE TABLE GDD_15.CALIFICACIONES (
	N_ID_CALIFICACION BIGINT PRIMARY KEY ,
	N_ID_PUBLICACION BIGINT,
	N_ID_CLIENTE BIGINT,
	C_CALIFICACION SMALLINT,
	D_DESCRIP VARCHAR(250)
);
GO

/* CREO  LAS PRIMARY KEY COMPUESTAS  */
alter table GDD_15.ROLES_USUARIOS add constraint PK_ROL_POR_USUARIO
	primary key clustered (N_ID_ROL,N_ID_USUARIO);
GO
alter table GDD_15.FUNCIONALIDADES_ROLES add constraint PK_FUNC_POR_ROL
	primary key clustered (N_ID_ROL,N_ID_FUNCIONALIDAD);
GO

/* CREO LAS FOREIGN KEY */

alter table GDD_15.FACTURAS_ITEMS add constraint FK_FACTURA_ITEM
	foreign key (N_ID_FACTURA) references GDD_15.FACTURAS (N_ID_FACTURA);
GO	
alter table GDD_15.FACTURAS_ITEMS add constraint FK_FACTURA_ITEM_PUBL
	foreign key (N_ID_PUBLICACION) references GDD_15.PUBLICACIONES (N_ID_PUBLICACION);
GO	
alter table GDD_15.OFERTAS add constraint FK_OFERTA_PUBL
	foreign key (N_ID_PUBLICACION) references GDD_15.PUBLICACIONES (N_ID_PUBLICACION);
GO
alter table GDD_15.OFERTAS add constraint FK_OFERTA_CLIENTE
	foreign key (N_ID_CLIENTE) references GDD_15.CLIENTES (N_ID_USUARIO);
GO
alter table GDD_15.COMPRAS add constraint FK_COMPRAS_CLIENTE
	foreign key (N_ID_CLIENTE) references GDD_15.CLIENTES (N_ID_USUARIO);
GO
alter table GDD_15.COMPRAS add constraint FK_COMPRA_PUBL
	foreign key (N_ID_PUBLICACION) references GDD_15.PUBLICACIONES (N_ID_PUBLICACION);
GO
alter table GDD_15.PUBLICACIONES add constraint FK_PUBL_VISIB
	foreign key (C_VISIBILIDAD) references GDD_15.VISIBILIDADES (C_VISIBILIDAD);
GO
alter table GDD_15.PUBLICACIONES add constraint FK_PUBL_USUARIO
	foreign key (N_ID_USUARIO) references GDD_15.USUARIOS (N_ID_USUARIO);
GO
alter table GDD_15.CALIFICACIONES add constraint FK_CALIF_PUBL
	foreign key (N_ID_PUBLICACION) references GDD_15.PUBLICACIONES(N_ID_PUBLICACION);
GO
alter table GDD_15.CALIFICACIONES add constraint FK_CALIF_CLIENTE
	foreign key (N_ID_CLIENTE) references GDD_15.CLIENTES(N_ID_USUARIO);
GO
alter table GDD_15.EMPRESAS add constraint FK_EMP_RUBRO
	foreign key (N_ID_RUBRO) references GDD_15.RUBROS(N_ID_RUBRO);
GO
alter table GDD_15.CLIENTES add constraint FK_CLI_DIR
	foreign key (N_ID_DIRECCION) references GDD_15.DIRECCIONES(N_ID_DIRECCION);
GO
alter table GDD_15.EMPRESAS add constraint FK_EMP_DIR
	foreign key (N_ID_DIRECCION) references GDD_15.DIRECCIONES(N_ID_DIRECCION);
GO
alter table GDD_15.CLIENTES add constraint FK_CLIENTE_USUARIO
	foreign key (N_ID_USUARIO) references GDD_15.USUARIOS(N_ID_USUARIO);
GO
alter table GDD_15.EMPRESAS add constraint FK_EMPRESA_USUARIO
	foreign key (N_ID_USUARIO) references GDD_15.USUARIOS(N_ID_USUARIO);
GO
alter table GDD_15.PUBLICACIONES add constraint FK_PUBL_ESTADO
	foreign key (N_ID_ESTADO) references GDD_15.ESTADOS (N_ID_ESTADO);
GO
alter table GDD_15.PUBLICACIONES add constraint FK_PUBL_TIPO
	foreign key (N_ID_TIPO) references GDD_15.TIPOS (N_ID_TIPO);
GO

/*Inserto las funcionalidades*/

INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('ABM de Rol');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('ABM de Usuarios');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('ABM de Rubro');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('ABM de visibilidad de publicación');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('Generar Publicación');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('Comprar/Ofertar');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('Historial');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('Calificar al Vendedor');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('Consulta de facturas');
INSERT INTO GDD_15.FUNCIONALIDADES (D_DESCRED) VALUES ('Listado Estadístico');
GO

/*Creo el rol Administrativo*/

INSERT INTO GDD_15.ROLES(C_ROL) VALUES('Administrativo');
GO


/*Se agregan funcionalidades al rol Administrativo*/

INSERT INTO GDD_15.FUNCIONALIDADES_ROLES(N_ID_ROL, N_ID_FUNCIONALIDAD)
SELECT tablaRol.N_ID_ROL,tablaFuncionalidad.N_ID_FUNCIONALIDAD FROM GDD_15.ROLES  tablaRol, GDD_15.FUNCIONALIDADES tablaFuncionalidad
WHERE tablaRol.C_ROL = 'Administrativo';
GO

/*Creo el rol Cliente*/

INSERT INTO GDD_15.ROLES(C_ROL) VALUES('Cliente');
GO

/*Se agregan funcionalidades al rol Cliente*/

INSERT INTO GDD_15.FUNCIONALIDADES_ROLES(N_ID_ROL, N_ID_FUNCIONALIDAD)
SELECT tablaRol.N_ID_ROL,tablaFuncionalidad.N_ID_FUNCIONALIDAD FROM GDD_15.ROLES  tablaRol, GDD_15.FUNCIONALIDADES tablaFuncionalidad
WHERE tablaRol.C_ROL = 'Cliente' AND tablaFuncionalidad.D_DESCRED IN ('ABM de Usuarios', 'ABM de Rubro', 'ABM de visibilidad de publicación', 'Generar Publicación', 'Comprar/Ofertar', 'Historial', 'Calificar al Vendedor', 'Consulta de facturas', 'Listado Estadístico');
GO

/*Creo el rol Empresa*/

INSERT INTO GDD_15.ROLES(C_ROL) VALUES('Empresa');
GO

/*Se agregan funcionalidades al rol Empresa*/

INSERT INTO GDD_15.FUNCIONALIDADES_ROLES(N_ID_ROL, N_ID_FUNCIONALIDAD)
SELECT tablaRol.N_ID_ROL,tablaFuncionalidad.N_ID_FUNCIONALIDAD FROM GDD_15.ROLES  tablaRol, GDD_15.FUNCIONALIDADES tablaFuncionalidad
WHERE tablaRol.C_ROL = 'Empresa' AND tablaFuncionalidad.D_DESCRED IN ('ABM de Usuarios', 'ABM de Rubro', 'ABM de visibilidad de publicación', 'Generar Publicación', 'Consulta de facturas', 'Listado Estadístico');
GO

/* Se inserta el usuario admin, password w23e */

INSERT INTO GDD_15.USUARIOS(C_USUARIO_NOMBRE,C_PASSWORD)
VALUES ('admin',(SELECT SUBSTRING(master.dbo.fn_varbintohexstr(HASHBYTES('SHA2_256','w23e')),3,250) ))
GO

/* Se le asignan todos los roles al usuario admin */

INSERT INTO GDD_15.ROLES_USUARIOS(N_ID_USUARIO, N_ID_ROL)
SELECT tablaUsuarios.N_ID_USUARIO, tablaRoles.N_ID_ROL FROM GDD_15.USUARIOS tablaUsuarios, GDD_15.ROLES tablaRoles
GO

/* Creo usuarios de prueba
/* Se inserta el usuario fede, password 1234 */

INSERT INTO GDD_15.USUARIOS(C_USUARIO_NOMBRE,C_PASSWORD)
VALUES ('fede',(SELECT SUBSTRING(master.dbo.fn_varbintohexstr(HASHBYTES('SHA2_256','1234')),3,250) ))
GO

/* Se le asigna el rol cliente al usuario fede */

INSERT INTO GDD_15.ROLES_USUARIOS(N_ID_USUARIO, N_ID_ROL)
SELECT tablaUsuarios.N_ID_USUARIO, tablaRoles.N_ID_ROL FROM GDD_15.USUARIOS tablaUsuarios, GDD_15.ROLES tablaRoles
WHERE tablaRoles.C_ROL = 'Cliente' AND tablaUsuarios.C_USUARIO_NOMBRE = 'fede'
GO

/* Se inserta el usuario ivi, password 1234 */

INSERT INTO GDD_15.USUARIOS(C_USUARIO_NOMBRE,C_PASSWORD)
VALUES ('ivi',(SELECT SUBSTRING(master.dbo.fn_varbintohexstr(HASHBYTES('SHA2_256','1234')),3,250) ))
GO

/* Se le asigna el rol cliente y empresa al usuario ivi */

INSERT INTO GDD_15.ROLES_USUARIOS(N_ID_USUARIO, N_ID_ROL)
SELECT tablaUsuarios.N_ID_USUARIO, tablaRoles.N_ID_ROL FROM GDD_15.USUARIOS tablaUsuarios, GDD_15.ROLES tablaRoles
WHERE tablaRoles.C_ROL != 'Administrativo' AND tablaUsuarios.C_USUARIO_NOMBRE = 'ivi'
GO

*/

/* Tests (consultas)

SELECT * FROM GDD_15.FUNCIONALIDADES
SELECT * FROM GDD_15.FUNCIONALIDADES_ROLES
SELECT * FROM GDD_15.ROLES
SELECT * FROM GDD_15.USUARIOS
SELECT * FROM GDD_15.ROLES_USUARIOS

SELECT C_PASSWORD FROM GDD_15.USUARIOS WHERE C_USUARIO_NOMBRE = 'admin'

SELECT COUNT(*) FROM GDD_15.ROLES_USUARIOS ROLES
JOIN GDD_15.USUARIOS USUARIOS ON (USUARIOS.N_ID_USUARIO = ROLES.N_ID_USUARIO)
WHERE USUARIOS.C_USUARIO_NOMBRE = 'ivi' AND roles.F_BAJA IS NULL

SELECT R.C_ROL FROM GDD_15.ROLES_USUARIOS RU
JOIN GDD_15.USUARIOS U ON (U.N_ID_USUARIO = RU.N_ID_USUARIO)
JOIN GDD_15.ROLES R ON (R.N_ID_ROL = RU.N_ID_ROL)
WHERE U.C_USUARIO_NOMBRE = 'admin' AND R.F_BAJA IS NULL AND RU.F_BAJA IS NULL

*/

/*migracion tabla MAESTRA*/--22.5.2016
CREATE PROCEDURE GDD_15.MIGRO_MAESTRA
AS
BEGIN
	/* INSERTO DIRECCIONES DE LOS CLIENTES */
	INSERT INTO GDD_15.DIRECCIONES 
	(
		C_CALLE,
		N_NUMERO,
		C_DEPTO,
		C_PISO,
		C_POSTAL
	)
	select DISTINCT Cli_Dom_Calle,
					Cli_Nro_Calle,
					Cli_Depto,
					Cli_Piso,
					Cli_Cod_Postal
	FROM gd_esquema.Maestra
	WHERE Cli_Dni IS NOT NULL;

	/*  INSERTO CLIENTES */
	INSERT INTO GDD_15.CLIENTES
	(	N_DOCUMENTO,
		C_TIPO_DOCUMENTO,
		D_APELLIDOS,
		D_NOMBRES,
		F_NACIMIENTO,
		N_ID_DIRECCION
	)
	SELECT DISTINCT m.Cli_Dni,
					'DNI',					
					m.Cli_Apeliido,
					m.Cli_Nombre,
					CONVERT(CHAR(10),Cli_Fecha_Nac,103),
					d.N_ID_DIRECCION		 				
	FROM gd_esquema.Maestra m, gdd_15.DIRECCIONES d
	WHERE m.Cli_Dni IS NOT NULL
	and d.n_numero=m.Cli_Nro_Calle
	and d.c_piso=m.cli_piso
	and d.C_DEPTO=m.Cli_Depto
	and d.C_CALLE=m.Cli_Dom_Calle;
	GO

	/* INSERTO DIRECCIONES DE LOS EMPRESAS */
	INSERT INTO GDD_15.DIRECCIONES 
	(
		C_CALLE,
		N_NUMERO,
		C_DEPTO,
		C_PISO,
		C_POSTAL
	)
	SELECT DISTINCT Publ_Empresa_Dom_Calle,
					Publ_Empresa_Nro_Calle,
					Publ_Empresa_Piso,
					Publ_Empresa_Depto,
					Publ_Empresa_Cod_Postal
	FROM gd_esquema.Maestra 
	WHERE Publ_Empresa_Cuit IS NOT NULL;

	/*INSERTO EMPRESAS*/
	INSERT INTO GDD_15.EMPRESAS
	(
		
		N_CUIT,
		F_CREACION,
		C_CORREO,
		C_RAZON_SOCIAL,
		N_ID_DIRECCION
	)
	SELECT DISTINCT m.Publ_Empresa_Cuit,
					m.Publ_Empresa_Fecha_Creacion,
					m.Publ_Empresa_Mail,
					m.Publ_Empresa_Razon_Social,
					d.N_ID_DIRECCION
	FROM gd_esquema.Maestra m, gdd_15.DIRECCIONES d
	WHERE Publ_Empresa_Cuit IS NOT NULL
	and d.n_numero=m.Publ_Empresa_Nro_Calle
	--and d.C_DEPTO=m.Publ_Empresa_Depto
	and d.C_CALLE=m.Publ_Empresa_Dom_Calle
	--	and d.c_piso=convert(varchar(50),(m.Publ_Empresa_Piso),1);
	--FALTA TRIGGER QUE CUANDO INSERTE EN CLIENTES ME CREE LOS USUARIOS CORRESPONDIENTES SINO NO FUNCIONA


	/*CREO LA TABLA DE VISIBILIDADES */
CREATE TABLE GDD_15.VISIBILIDADES (
	C_VISIBILIDAD BIGINT PRIMARY KEY ,
	D_DESCRIP VARCHAR(50),
	N_PRECIO FLOAT(24),
	N_COMISION  FLOAT(24)
);
select * from GDD_15.VISIBILIDADES
Begin
   /*INSERTO VISIBILIDADES */
  INSERT INTO GDD_15.VISIBILIDADES
  (
	C_VISIBILIDAD,
	D_DESCRIP,
	N_PRECIO
	)
  SELECT  DISTINCT Publicacion_Visibilidad_Cod,
					Publicacion_Visibilidad_Desc,
					--Publicacion_Visibilidad_Porcentaje,--- TENEMOS QUE VER ESTE TEMA
					Publicacion_Visibilidad_Precio
  FROM gd_esquema.Maestra m
  WHERE Publicacion_Visibilidad_Cod IS NOT NULL;

-- FORMA DE AGARAR LOS ERRORES . SEGUIR BUSCANDO --
  IF @@ERROR <> 0 
    BEGIN
        -- dev 99 para indicar error
        PRINT N'ERROR .';
    --  RETURN 99;
    END
ELSE
    BEGIN
        -- devuelv 0 para indicar que esta ok 
        PRINT N'ok';
      --RETURN 0;
    END;
	 
END;
GO

INSERT INTO GDD_15.ESTADOS -- VER CUALES SON LOS ESTADOS .EN LA MAESTRA ESTA "PUBLICADA"
(

);

/* INSERTO PUBLICACIONES */ --RECIEN EMPEZADO 
-- CURSOR
DECLARE PUBLICACIONES CURSOR FOR 
	select  DISTINCT Publicacion_Cod,
			 Publicacion_Descripcion,
			 Publicacion_Estado,
			 Publicacion_Fecha,
			 Publicacion_Fecha_Venc,
			 Publicacion_Precio,
			 Publicacion_Rubro_Descripcion,
			 Publicacion_Stock,
			 Publicacion_Tipo,
			 Publicacion_Visibilidad_Cod,
			 Publicacion_Visibilidad_Desc,
			 Publicacion_Visibilidad_Porcentaje,
			 Publicacion_Visibilidad_Precio
  FROM gd_esquema.Maestra m
  WHERE Publicacion_Cod IS NOT NULL;

OPEN PUBLICACIONES
FETCH NEXT FROM PUBLICAIONES
WHILE @@FETCH_STATUS = 0

 INSERTO INTO GDD_15.PUBLICACIONES
 (
	
 )



/*INSERTO CALLIFICAIONES */
INSERT INTO GDD_15.CALIFICACIONES
(
	N_ID_CALIFICACION,
	D_DESCRIP,
	C_CALIFICACION
)
SELECT DISTINCT Calificacion_Codigo,
Calificacion_Descripcion,
Calificacion_Cant_Estrellas
FROM gd_esquema.Maestra m
WHERE M.Calificacion_Codigo IS NOT NULL;
/*INSERTO FACTURAS */
  SELECT Factura_Fecha,
  Factura_Nro,
  Factura_Total,
  Item_Factura_Cantidad,
  Item_Factura_Monto,
  Forma_Pago_Desc
  FROM gd_esquema.Maestra m
  WHERE M.Factura_Nro IS NOT NULL;

  /*INSERTO OYC*/
  SELECT Compra_Cantidad,Compra_Fecha--,
 -- Oferta_Monto,Oferta_Fecha
  FROM gd_esquema.Maestra m
  WHERE COMPRA_CANTIDAD IS NOT NULL;